pipeline {
    agent any

    environment {
        ROLE_ARN     = 'arn:aws:iam::123456789012:role/YourTerraformRole'
        SESSION_NAME = 'jenkins-terraform-session'
        AWS_REGION   = 'us-east-1'
    }

    stages {
        stage('Check AWS CLI Installed') {
            steps {
                script {
                    def result = sh(script: 'which aws || true', returnStdout: true).trim()
                    if (!result) {
                        error "❌ AWS CLI is not installed on this Jenkins agent."
                    }
                    echo "✅ AWS CLI found at: ${result}"
                }
            }
        }

        stage('Checkout Code') {
            steps {
                git url: 'https://your-repo-url.git', branch: 'main'
            }
        }

        stage('Assume IAM Role') {
            steps {
                script {
                    def credsJson = sh(script: """
                        aws sts assume-role \
                          --role-arn ${ROLE_ARN} \
                          --role-session-name ${SESSION_NAME} \
                          --region ${AWS_REGION} \
                          --output json
                    """, returnStdout: true).trim()

                    def creds = readJSON text: credsJson

                    env.AWS_ACCESS_KEY_ID     = creds.Credentials.AccessKeyId
                    env.AWS_SECRET_ACCESS_KEY = creds.Credentials.SecretAccessKey
                    env.AWS_SESSION_TOKEN     = creds.Credentials.SessionToken
                }
            }
        }

        stage('Terraform Init') {
            steps {
                dir('main') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir('main') {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('main') {
                    sh 'terraform plan -out=tfplan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                input message: 'Apply the Terraform plan?'
                dir('main') {
                    sh 'terraform apply tfplan'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
